<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:camel="http://camel.apache.org/schema/blueprint"
           xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.0.0"
           xmlns:jaxrs="http://cxf.apache.org/blueprint/jaxrs"
           xsi:schemaLocation="
             http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd
             http://camel.apache.org/schema/blueprint/cxf http://camel.apache.org/schema/blueprint/cxf/camel-cxf.xsd
             http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.0.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.0.0.xsd
             http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
             http://cxf.apache.org/blueprint/jaxrs http://http://cxf.apache.org/schemas/blueprint/jaxrs.xsd">

  <!-- OSGI blueprint property placeholder -->
  <cm:property-placeholder persistent-id="com.mycompany.camel.blueprint">
        <cm:default-properties>
            <cm:property name="host" value="localhost"/>
            <cm:property name="frontendRestPort" value="9090"/>
            <cm:property name="backendRestPort" value="9091"/>
            <cm:property name="backendSoapPort" value="9092"/>
        </cm:default-properties>
  </cm:property-placeholder>
  
  <!-- Frontend REST service -->
  
  <cxf:rsServer id="restFrontend" address="http://${host}:${frontendRestPort}/route" serviceClass="com.mycompany.camel.cxf.FrontendRESTService"/>
  
  <!-- Backend REST service   -->
  
  <jaxrs:server id="restService"
                address="http://${host}:${backendRestPort}/rest" 
                staticSubresourceResolution="true">
    <jaxrs:serviceBeans>
      <ref component-id="backendRESTService"/>
    </jaxrs:serviceBeans>       
  </jaxrs:server>
 
  <cxf:rsClient id="restBackend" address="http://${host}:${backendRestPort}/rest" serviceClass="com.mycompany.camel.cxf.BackendRESTService"/>

  <bean id="backendRESTService" class="com.mycompany.camel.cxf.BackendRESTService" />
  
  <!-- Backend SOAP service -->
  
  <cxf:cxfEndpoint id="backendSOAPService"
                   address="http://${host}:${backendSoapPort}/backendsoapservice"
                   endpointName="s:BackendSOAPPort"
                   serviceName="s:BackendSOAPServiceService"
                   serviceClass="com.mycompany.camel.cxf.BackendSOAPServicePortType"
                   wsdlURL="wsdl/BackendSOAPService.wsdl"
                   xmlns:s="http://cxf.camel.mycompany.com">
    	<cxf:properties>
	        <entry key="dataFormat" value="MESSAGE"/>
	    </cxf:properties>
  </cxf:cxfEndpoint>
    
  <bean id="realSOAPService" class="com.mycompany.camel.cxf.RealSOAPServiceBean"
        init-method="start" destroy-method="stop">
    	<!-- url of the real web service we have proxied -->
    	<property name="url" value="http://${host}:${backendSoapPort}/backendsoapservice"/>
  </bean>
  	
  <!-- Message Processors -->
  
  <bean id="soapProcessor" class="com.mycompany.camel.cxf.SOAPProcessor"></bean>
  
  <bean id="otherProcessor" class="com.mycompany.camel.cxf.OtherProcessor"></bean>
  
  <!-- Camel route -->

  <camelContext xmlns="http://camel.apache.org/schema/blueprint">
    <route>
        <from uri="cxfrs:bean:restFrontend"/>
        <log message="Rest service version 1.0 has been executed with ${body}" loggingLevel="INFO"/>
        <choice>
            <when>
                <simple>${in.body} == "callRestService"</simple>
                <to uri="cxfrs:bean:restBackend"/>
            </when>
            <when>
                <simple>${in.body} == "callSoapService"</simple>
                <process ref="soapProcessor"/>
                <to uri="cxf:bean:backendSOAPService"/>
            </when>
            <otherwise>
                <log message="Unrecognised service ${in.body}" loggingLevel="ERROR"/>
                <bean ref="otherProcessor" beanType="com.mycompany.camel.cxf.OtherProcessor"/>
            </otherwise>
        </choice>
    </route>
</camelContext>

</blueprint>
