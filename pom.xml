<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>com.mycompany</groupId>
  <artifactId>cxf-demo</artifactId>
  <packaging>bundle</packaging>
  <version>1.1.0-SNAPSHOT</version>

  <name>A Camel Blueprint Route</name>
  <url>http://www.myorganization.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <project.camel.version>2.15.1.redhat-621084</project.camel.version>
    <project.cxf.version>3.0.4.redhat-621084</project.cxf.version>
  </properties>
  <dependencies>
    <!-- assuming camel is pulling aries 1.0.0, pull asm 4.0 first -->
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-all</artifactId>
      <version>4.0</version>     
    </dependency>

    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-core</artifactId>
      <version>${project.camel.version}</version>
    </dependency>
     <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-test</artifactId>
      <version>${project.camel.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-spring</artifactId>
      <version>${project.camel.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-test-blueprint</artifactId>
      <version>${project.camel.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-http</artifactId>
      <version>${project.camel.version}</version>
    </dependency>
    <!-- exclude bluerprint from camel-cxf as we have them already from camel-blueprint
         and we need to avoid duplicate JARs in the classpath as then blueprint start up twice -->
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-cxf</artifactId>
      <version>${project.camel.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.aries.blueprint</groupId>
          <artifactId>org.apache.aries.blueprint.core</artifactId>         
        </exclusion>
        <exclusion>
          <groupId>org.apache.aries.blueprint</groupId>
          <artifactId>org.apache.aries.blueprint.api</artifactId>         
        </exclusion>
        <exclusion>
          <groupId>org.apache.aries.quiesce</groupId>
          <artifactId>org.apache.aries.quiesce.api</artifactId>         
        </exclusion>
        <!--  exclude additional unneeded components -->
        <exclusion>
          <groupId>org.apache.camel</groupId>
          <artifactId>camel-spring</artifactId>         
        </exclusion>
      </exclusions>
      
    </dependency>
    
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-http</artifactId>
      <version>${project.cxf.version}</version>
      
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-bindings-soap</artifactId>
	  <version>${project.cxf.version}</version>      
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-http-jetty</artifactId>
	  <version>${project.cxf.version}</version>      
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-testutils</artifactId>
	  <version>${project.cxf.version}</version>      
    </dependency>
    <!-- for ws-* tests -->
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-ws-addr</artifactId>
	  <version>${project.cxf.version}</version>      
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-ws-policy</artifactId>
	  <version>${project.cxf.version}</version>      
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-ws-rm</artifactId>
	  <version>${project.cxf.version}</version>      
    </dependency>
    <!-- for jaxrs providers test -->
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-rs-extension-providers</artifactId>
	  <version>${project.cxf.version}</version>      
    </dependency>  
   
  </dependencies>

  <build>
    <defaultGoal>install</defaultGoal>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.5.1</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>

      <!-- to generate the MANIFEST-FILE of the bundle -->
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>2.3.7</version>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <Bundle-SymbolicName>cxf-demo</Bundle-SymbolicName>
            <Private-Package>com.mycompany.camel.cxf.*</Private-Package>
            <Import-Package>*</Import-Package>
          </instructions>
        </configuration>
      </plugin>

      <!-- to run the example using mvn camel:run -->
      <plugin>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-maven-plugin</artifactId>
        <version>2.15.1.redhat-620133</version>
        <configuration>
          <useBlueprint>true</useBlueprint>
        </configuration>
      </plugin>

	<!-- to generate source code from the wsdl file -->
      <plugin>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-codegen-plugin</artifactId>
        <version>3.0.4.redhat-620133</version>
        <executions>
          <execution>
            <id>generate-sources</id>
            <phase>generate-sources</phase>
            <configuration>
              <sourceRoot>${basedir}/target/generated/src/main/java</sourceRoot>
              <defaultOptions>
 			    <frontEnd>jaxws21</frontEnd>
			  </defaultOptions>
              <wsdlOptions>
                <wsdlOption>
                  <wsdl>${basedir}/src/main/resources/wsdl/BackendSOAPService.wsdl</wsdl>
                  <extraargs>
                    <extraarg>-impl</extraarg>
                  </extraargs>
                </wsdlOption>
              </wsdlOptions>
            </configuration>
            <goals>
              <goal>wsdl2java</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
    	<groupId>io.fabric8</groupId>
    	<artifactId>fabric8-maven-plugin</artifactId>
        <version>1.2.0.redhat-621084</version>
    	<configuration>
    	    <serverId>fabric8.upload.local</serverId>
        	<profile>cxf-demo</profile>
        	<features>camel-cxf fabric-cxf swagger</features>
        	<parentProfiles>feature-camel feature-cxf</parentProfiles>
        	<version>1.0</version>
      	</configuration>
      </plugin>
    </plugins>
  </build>

</project>
